<?php

namespace SYM16\SimpleStockBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * CategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategorieRepository extends EntityRepository
{

	//renvoie le nombre total de lignes de l'entité (utilise DQL)
	public function getNbCategorie()
	{
		$query = $this ->_em->createQuery('
			SELECT COUNT(c)
			FROM SYM16SimpleStockBundle:Categorie c');
		return $query->getSingleScalarResult();
	}

	// même que précédent mais avec Query Builder
	public function getNbCategorieWithQueryBuilder()
	{
		// on crée un query builder
		$querybuilder = $this->_em->CreateQueryBuilder();
		$querybuilder->select('count(c)')->from('SYM16SimpleStockBundle:Categorie', 'c');
		// on récuère la query à partir du quesrybuilder
		$query = $querybuilder->getQuery();
		// on l'exécute et on renvoie sa valeur	
		return $query->getSingleScalarResult();
	}

	//renvoie le nombre total de lignes de l'entité ayant une id données (utilise DQL)
	public function getNbCategorieById($id)
	{
		$query = $this ->_em->createQuery('
			SELECT COUNT(c)
			FROM SYM16SimpleStockBundle:Categorie c
			WHERE u.souscategorie = :id');
		$query->setParameter('id', $id);
		return $query->getSingleScalarResult();
	}

	// même que précédent mais avec Query Builder
	public function getNbCategorieByIdWithQueryBuilder($id)
	{
		// on crée un query builder
		$querybuilder = $this->_em->CreateQueryBuilder();
		$querybuilder->select('count(c)')->from('SYM16SimpleStockBundle:Categorie', 'c');
		$querybuilder->where('c.souscategorie = :id')->setParameter('id', $id);
		// on récuère la query à partir du quesrybuilder
		$query = $querybuilder->getQuery();
		// on l'exécute et on renvoie sa valeur	
		return $query->getSingleScalarResult();
	}

	// renvoie une entité Categorie ne contenant que les Categories ayant une sous categorie donné
	public function getCategorieBySouscategorie($valeur)
	{
		$query = $this ->_em->createQuery('
			SELECT c, s
			FROM SYM16SimpleStockBundle:Categorie c
			JOIN u.souscategorie s WHERE s.libelle = :valeur');
		$query->setParameter('valeur', $statut);
		return $query->getResult();
	}

	// même que précédent mais avec Query Builder
	public function getNbCategorieBySouscategorieWithQueryBuilder($valeur)
	{
		// on crée un query builder
		$querybuilder = $this->_em->CreateQueryBuilder();
		$querybuilder->select('c')->from('SYM16SimpleStockBundle:Categorie', 'c');
		//$querybuilder->leftJoin('u.souscategorie', 's')->addSelect('s');
		$querybuilder->leftJoin('c.souscategorie', 's');
		$querybuilder->where('s.libelle = :valeur')->setParameter('valeur', $valeur);
		// on récuère la query à partir du quesrybuilder
		$query = $querybuilder->getQuery();
		// on l'exécute et on renvoie sa valeur	
		return $query->getResult();
	}

}
