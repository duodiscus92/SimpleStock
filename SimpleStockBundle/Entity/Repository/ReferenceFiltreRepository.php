<?php

namespace SYM16\SimpleStockBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ReferenceFiltreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReferenceFiltreRepository extends EntityRepository
{
	// filter selon une liste de critères
	public function findByFilter($filtre)
	{
		// on crée un query builder
		$querybuilder = $this->_em->CreateQueryBuilder();
		$querybuilder->select('r')->from('SYM16SimpleStockBundle:Reference', 'r');
		$querybuilder->leftJoin('r.entrepot', 'e');
		// traitement du uniquement
		if( ($ef = $filtre['u']['entrepot']) == NULL)
		    $querybuilder->where('e.nom IS NOT NULL');
		else 
		    $querybuilder->where('e.nom = :inclureEntrepot')->setParameter('inclureEntrepot', $ef);

		if( ($ef = $filtre['u']['createur']) == NULL)
		    $querybuilder->andWhere('r.createur IS NOT NULL');
		else
		    $querybuilder->andWhere('r.createur = :inclureCreateur')->setParameter('inclureCreateur', $ef);

		//traitement du sauf
		if( ($ef = $filtre['s']['entrepot']) == NULL)
		    $querybuilder->andWhere('e.nom IS NOT NULL');
		else 
		    $querybuilder->andWhere('e.nom <> :inclureEntrepot')->setParameter('inclureEntrepot', $ef);

		if( ($ef = $filtre['s']['createur']) == NULL)
		    $querybuilder->andWhere('r.createur IS NOT NULL');
		else
		    $querybuilder->andWhere('r.createur <> :inclureCreateur')->setParameter('inclureCreateur', $ef);

		// on récupère la query à partir du querybuilder
		$query = $querybuilder->getQuery();
		// on l'exécute et on renvoie sa valeur
		return $query->getResult();
	}

	// compter le nb d'article selon un filtre
	public function countByFilter($filtre)
	{
		// on crée un query builder
		$querybuilder = $this->_em->CreateQueryBuilder();
		$querybuilder->select('COUNT(r)')->from('SYM16SimpleStockBundle:Reference', 'r');
		$querybuilder->leftJoin('r.entrepot', 'e');
		// traitement du uniquement
		if( ($ef = $filtre['u']['entrepot']) == NULL)
		    $querybuilder->where('e.nom IS NOT NULL');
		else 
		    $querybuilder->where('e.nom = :inclureEntrepot')->setParameter('inclureEntrepot', $ef);

		if( ($ef = $filtre['u']['createur']) == NULL)
		    $querybuilder->andWhere('r.createur IS NOT NULL');
		else
		    $querybuilder->andWhere('r.createur = :inclureCreateur')->setParameter('inclureCreateur', $ef);

		//traitement du sauf
		if( ($ef = $filtre['s']['entrepot']) == NULL)
		    $querybuilder->andWhere('e.nom IS NOT NULL');
		else 
		    $querybuilder->andWhere('e.nom <> :inclureEntrepot')->setParameter('inclureEntrepot', $ef);

		if( ($ef = $filtre['s']['createur']) == NULL)
		    $querybuilder->andWhere('r.createur IS NOT NULL');
		else
		    $querybuilder->andWhere('r.createur <> :inclureCreateur')->setParameter('inclureCreateur', $ef);

		// on récupère la query à partir du querybuilder
		$query = $querybuilder->getQuery();
		// on l'exécute et on renvoie sa valeur
		return $query->getSingleScalarResult();
	}
}
